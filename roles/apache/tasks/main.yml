---
- name: Install Apache on Centos
  yum:
    name: httpd
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  notify: restart apache

- name: Install Apache on Ubuntu
  apt:
    name: apache2
    state: present
  when: ansible_facts['os_family'] == "Debian"
  notify: restart apache

- name: Install git on Centos
  yum:
    name: git
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "RedHat"

- name: Install git on Ubuntu
  apt:
    name: git
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Create clone destinantion directory
  ansible.builtin.file:
    path: "{{ clone_dest }}"
    state: directory
    mode: '0755'
  become: yes

- name: Clone Git repository
  ansible.builtin.git:
    repo: "{{ git_url }}"
    dest: "{{ clone_dest }}"
    
- name: Find all directories in the source
  ansible.builtin.find:
    paths: "{{ clone_dest }}"
    file_type: directory
  register: dirs_to_create

- name: Ensure each directory exists at the destination
  ansible.builtin.file:
    path: "{{ www_folder }}/{{ item.path | regex_replace('^' + clone_dest + '/', '') }}"
    state: directory
  loop: "{{ dirs_to_create.files }}"

- name: Find all files in the source directory
  ansible.builtin.find:
    paths: "{{ clone_dest }}"
    file_type: file
  register: files_to_copy

- name: Copy each file to the destination directory
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ www_folder }}/{{ item.path | regex_replace('^' + clone_dest + '/', '') }}"
    remote_src: yes
  loop: "{{ files_to_copy.files }}"
  notify: restart apache

- name: Remove the original cloned directory
  ansible.builtin.file:
    path: "{{ clone_dest }}"
    state: absent
